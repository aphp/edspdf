[project]
name = "edspdf"
description = "Smart text extraction from PDF documents"
authors = [
    { name = "Perceval Wajsburt", email = "perceval.wajsburt-ext@aphp.fr" },
    { name = "Alice Calliger", email = "alice.calliger-ext@aphp.fr" },
    { name = "Basile Dura", email = "basile.dura-ext@aphp.fr" },
]
license = { file = "LICENSE" }
readme = "README.md"
urls.homepage = "https://github.com/aphp/edspdf/"
urls.repository = "https://github.com/aphp/edspdf/"
urls.documentation = "https://aphp.github.io/edspdf/"
dynamic = ["version"]
requires-python = ">3.7.6,<4.0,!=3.8.1"

dependencies = [
    "scikit-learn>=1.0.2,<2.0.0",
    "pydantic>=1.2,<2.0.0",
    "catalogue~=2.0",
    "networkx~=2.6",
    "confit>=0.2.1,<1.0.0",
    "foldedtensor>=0.2.1,<1.0.0",
    "torch>1.0.0",
    "accelerate>=0.12.0,<1.0.0",
    "tqdm~=4.64.1",
    "regex",
    "pdfminer.six>=20220319",
    "pypdfium2~=2.7",
    "rich-logger>=0.3.0,<1.0.0",
    "safetensors~=0.3.1"
]

[project.optional-dependencies]
dev = [
    "pandas>=1.2,<2.0.0",
    "black==22.6.0",
    "flake8>=3.0",
    "pre-commit>=2.18",
    "pytest==7.1.1",
    "pytest-cov==3.0.0",
    "mypy>=1.0.0",
    "streamlit>=1.19",
    "coverage>=6.5.0",
    "datasets~=2.10",
    "huggingface_hub>=0.8.1",
]
docs = [
    "mike~=1.1.2",
    "mkdocs-bibtex~=2.8.14",
    "mkdocs-gen-files~=0.4.0",
    "mkdocs-literate-nav~=0.6.0",
    "mkdocs-material~=9.1.0",
    "mkdocstrings~=0.20.0",
    "mkdocstrings-python~=0.8.3",
    "mkdocs-glightbox~=0.3.1",
    "mkdocs-autorefs~=0.4.1",
]


[project.entry-points."edspdf_factories"]
# Extractors
"pdfminer_extractor" = "edspdf.components.extractors.pdfminer:PdfMinerExtractor"

# Misc
"box_preprocessor" = "edspdf.components.embeddings.box_layout_preprocessor:BoxLayoutPreprocessor"

# Embeddings
"simple_text_embedding" = "edspdf.components.embeddings.simple_text_embedding:SimpleTextEmbeddingComponent"
"sub_box_cnn_pooler" = "edspdf.components.embeddings.sub_box_cnn_pooler:SubBoxCNNPoolerComponent"
"embedding_combiner" = "edspdf.components.embeddings.embedding_combiner:EmbeddingCombinerComponent"
"box_layout_embedding" = "edspdf.components.embeddings.box_layout_embedding:BoxLayoutEmbeddingComponent"
"box_transformer" = "edspdf.components.embeddings.box_transformer:BoxTransformerComponent"

# Classifiers
"mask_classifier" = "edspdf.components.classifiers.mask:simple_mask_classifier_factory"
"multi_mask_classifier" = "edspdf.components.classifiers.mask:mask_classifier_factory"
"trainable_classifier" = "edspdf.components.classifiers.trainable_classifier:TrainableClassifier"
"random_classifier" = "edspdf.components.classifiers.random:RandomClassifier"
"dummy_classifier" = "edspdf.components.classifiers.dummy:DummyClassifier"
# "harmonized-classifier    " = "edspdf.components.classifiers.harmonized_classifier:HarmonizedClassifier"

# Aggregators
"simple_aggregator" = "edspdf.components.aggregators.simple:SimpleAggregator"
"styled_aggregator" = "edspdf.components.aggregators.styled:StyledAggregator"


[tool.setuptools.dynamic]
version = { attr = "edspdf.__version__" }

[tool.setuptools.packages.find]
where = ["."]

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 10
exclude = ["docs", "build", "tests"]
verbose = 0
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false

[tool.coverage]
exclude_lines = [
    "raise NotImplementedError",
    "def __repr__",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.mypy]
plugins = "pydantic.mypy"

[tool.ruff]
fix = true
exclude = [
    ".git",
    "__pycache__",
    "__init__.py",
    ".mypy_cache",
    ".pytest_cache",
    ".venv",
    "build",
]
ignore = []
line-length = 88
select = [
    "E",
    "F",
    "W",
    "I001"
]
fixable = ["E", "F", "W", "I"]

[tool.ruff.isort]
known-first-party = ["edspdf"]


[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
